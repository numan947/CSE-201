Line no 1: TOKEN <INT> Lexeme int found
Line no 1: TOKEN <PAREN> Lexeme ( found
Line no 1: TOKEN <PAREN> Lexeme ) found
Line no 1: TOKEN <CURL> Lexeme { found
Line no 2: TOKEN <INT> Lexeme int found
Line no 2: TOKEN <COMMA> Lexeme , found
Line no 2: TOKEN <SEMICOLON> Lexeme ; found
Line no 3: TOKEN <CHAR> Lexeme char found
Line no 3: TOKEN <SEMICOLON> Lexeme ; found
Line no 4: TOKEN <CHAR> Lexeme char found
Line no 4: TOKEN <BRACKET> Lexeme [ found
Line no 4: TOKEN <CONST_INT> Lexeme 10 found
Line no 4: TOKEN <BRACKET> Lexeme ] found
Line no 4: TOKEN <ASSIGNOP> Lexeme = found
Line no 4: TOKEN <SEMICOLON> Lexeme ; found
Line no 5: TOKEN <CHAR> Lexeme char found
Line no 5: TOKEN <BRACKET> Lexeme [ found
Line no 5: TOKEN <CONST_INT> Lexeme 10 found
Line no 5: TOKEN <BRACKET> Lexeme ] found
Line no 5: TOKEN <ASSIGNOP> Lexeme = found
Line no 7: TOKEN <SEMICOLON> Lexeme ; found
Line no 8: TOKEN <ASSIGNOP> Lexeme = found
Line no 8: TOKEN <CONST_INT> Lexeme 10 found
Line no 8: TOKEN <SEMICOLON> Lexeme ; found
Line no 9: TOKEN <ASSIGNOP> Lexeme = found
Line no 9: TOKEN <MULOP> Lexeme * found
Line no 9: TOKEN <CONST_INT> Lexeme 10 found
Line no 9: TOKEN <MULOP> Lexeme % found
Line no 9: TOKEN <CONST_INT> Lexeme 2 found
Line no 9: TOKEN <ADDOP> Lexeme + found
Line no 9: TOKEN <CONST_INT> Lexeme 3 found
Line no 9: TOKEN <SEMICOLON> Lexeme ; found
Line no 10: TOKEN <MULOP> Lexeme / found
Line no 10: TOKEN <MULOP> Lexeme / found
Line no 11: TOKEN <MULOP> Lexeme / found
Line no 11: TOKEN <MULOP> Lexeme * found
Line no 11: TOKEN <MULOP> Lexeme * found
Line no 11: TOKEN <MULOP> Lexeme * found
Line no 11: TOKEN <MULOP> Lexeme * found
Line no 11: TOKEN <MULOP> Lexeme * found
Line no 11: TOKEN <MULOP> Lexeme * found
Line no 11: TOKEN <MULOP> Lexeme * found
Line no 12: TOKEN <MULOP> Lexeme * found
Line no 12: TOKEN <MULOP> Lexeme * found
Line no 12: TOKEN <MULOP> Lexeme * found
Line no 12: TOKEN <MULOP> Lexeme * found
Line no 12: TOKEN <MULOP> Lexeme * found
Line no 12: TOKEN <MULOP> Lexeme * found
Line no 12: TOKEN <MULOP> Lexeme * found
Line no 13: TOKEN <MULOP> Lexeme * found
Line no 13: TOKEN <MULOP> Lexeme * found
Line no 13: TOKEN <MULOP> Lexeme * found
Line no 13: TOKEN <MULOP> Lexeme * found
Line no 13: TOKEN <MULOP> Lexeme * found
Line no 13: TOKEN <MULOP> Lexeme * found
Line no 13: TOKEN <MULOP> Lexeme / found
Line no 14: TOKEN <IF> Lexeme if found
Line no 14: TOKEN <PAREN> Lexeme ( found
Line no 14: TOKEN <RELOP> Lexeme == found
Line no 14: TOKEN <CONST_INT> Lexeme 10 found
Line no 14: TOKEN <PAREN> Lexeme ) found
Line no 14: TOKEN <CURL> Lexeme { found
Line no 15: TOKEN <ASSIGNOP> Lexeme = found
Line no 15: TOKEN <SEMICOLON> Lexeme ; found
Line no 16: TOKEN <BRACKET> Lexeme [ found
Line no 16: TOKEN <CONST_INT> Lexeme 3 found
Line no 16: TOKEN <BRACKET> Lexeme ] found
Line no 16: TOKEN <ASSIGNOP> Lexeme = found
Line no 16: TOKEN <SEMICOLON> Lexeme ; found
Line no 17: TOKEN <BRACKET> Lexeme [ found
Line no 17: TOKEN <CONST_INT> Lexeme 4 found
Line no 17: TOKEN <BRACKET> Lexeme ] found
Line no 17: TOKEN <ASSIGNOP> Lexeme = found
Line no 17: TOKEN <CONST_INT> Lexeme 0 found
Line no 17: TOKEN <SEMICOLON> Lexeme ; found
Line no 18: TOKEN <CURL> Lexeme } found
Line no 19: TOKEN <RETURN> Lexeme return found
Line no 19: TOKEN <CONST_INT> Lexeme 0 found
Line no 19: TOKEN <SEMICOLON> Lexeme ; found
Line no 20: TOKEN <CURL> Lexeme } found
