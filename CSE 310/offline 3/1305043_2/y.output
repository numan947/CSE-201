Terminals unused in grammar

   DO
   BREAK
   DOUBLE
   VOID
   SWITCH
   CASE
   DEFAULT
   CONTINUE
   STRING


Grammar

    0 $accept: Program $end

    1 Program: INT MAIN LPAREN RPAREN compound_statement

    2 compound_statement: LCURL var_declaration statements RCURL
    3                   | LCURL statements RCURL
    4                   | LCURL RCURL

    5 var_declaration: type_specifier declaration_list SEMICOLON
    6                | var_declaration type_specifier declaration_list SEMICOLON

    7 type_specifier: INT
    8               | FLOAT
    9               | CHAR

   10 declaration_list: declaration_list COMMA ID
   11                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   12                 | ID
   13                 | ID LTHIRD CONST_INT RTHIRD

   14 statements: statement
   15           | statements statement

   16 statement: expression_statement
   17          | compound_statement
   18          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   19          | IF LPAREN expression RPAREN statement
   20          | IF LPAREN expression RPAREN statement ELSE statement
   21          | WHILE LPAREN expression RPAREN statement
   22          | PRINTLN LPAREN ID RPAREN SEMICOLON
   23          | RETURN expression SEMICOLON

   24 expression_statement: SEMICOLON
   25                     | expression SEMICOLON

   26 variable: ID
   27         | ID LTHIRD expression RTHIRD

   28 expression: logic_expression
   29           | variable ASSIGNOP logic_expression

   30 logic_expression: rel_expression
   31                 | rel_expression LOGICOP rel_expression

   32 rel_expression: simple_expression
   33               | simple_expression RELOP simple_expression

   34 simple_expression: term
   35                  | simple_expression ADDOP term

   36 term: unary_expression
   37     | term MULOP unary_expression

   38 unary_expression: ADDOP unary_expression
   39                 | NOT unary_expression
   40                 | factor

   41 factor: variable
   42       | LPAREN expression RPAREN
   43       | CONST_INT
   44       | CONST_FLOAT
   45       | CONST_CHAR
   46       | variable INCOP
   47       | variable DECOP


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 19 20
ELSE (259) 20
FOR (260) 18
WHILE (261) 21
DO (262)
BREAK (263)
INT (264) 1 7
CHAR (265) 9
FLOAT (266) 8
DOUBLE (267)
VOID (268)
RETURN (269) 23
SWITCH (270)
CASE (271)
DEFAULT (272)
CONTINUE (273)
MAIN (274) 1
PRINTLN (275) 22
CONST_INT (276) 11 13 43
CONST_FLOAT (277) 44
CONST_CHAR (278) 45
ADDOP (279) 35 38
INCOP (280) 46
DECOP (281) 47
MULOP (282) 37
RELOP (283) 33
ASSIGNOP (284) 29
LOGICOP (285) 31
LPAREN (286) 1 18 19 20 21 22 42
RPAREN (287) 1 18 19 20 21 22 42
LCURL (288) 2 3 4
RCURL (289) 2 3 4
LTHIRD (290) 11 13 27
RTHIRD (291) 11 13 27
COMMA (292) 10 11
SEMICOLON (293) 5 6 22 23 24 25
STRING (294)
NOT (295) 39
ID (296) 10 11 12 13 22 26 27
HELP_ELSE_GET_PRECEDENCE (297)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
Program (44)
    on left: 1, on right: 0
compound_statement (45)
    on left: 2 3 4, on right: 1 17
var_declaration (46)
    on left: 5 6, on right: 2 6
type_specifier (47)
    on left: 7 8 9, on right: 5 6
declaration_list (48)
    on left: 10 11 12 13, on right: 5 6 10 11
statements (49)
    on left: 14 15, on right: 2 3 15
statement (50)
    on left: 16 17 18 19 20 21 22 23, on right: 14 15 18 19 20 21
expression_statement (51)
    on left: 24 25, on right: 16 18
variable (52)
    on left: 26 27, on right: 29 41 46 47
expression (53)
    on left: 28 29, on right: 18 19 20 21 23 25 27 42
logic_expression (54)
    on left: 30 31, on right: 28 29
rel_expression (55)
    on left: 32 33, on right: 30 31
simple_expression (56)
    on left: 34 35, on right: 32 33 35
term (57)
    on left: 36 37, on right: 34 35 37
unary_expression (58)
    on left: 38 39 40, on right: 36 37 38 39
factor (59)
    on left: 41 42 43 44 45 46 47, on right: 40


State 0

    0 $accept: . Program $end

    INT  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: INT . MAIN LPAREN RPAREN compound_statement

    MAIN  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: INT MAIN . LPAREN RPAREN compound_statement

    LPAREN  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: INT MAIN LPAREN . RPAREN compound_statement

    RPAREN  shift, and go to state 6


State 6

    1 Program: INT MAIN LPAREN RPAREN . compound_statement

    LCURL  shift, and go to state 7

    compound_statement  go to state 8


State 7

    2 compound_statement: LCURL . var_declaration statements RCURL
    3                   | LCURL . statements RCURL
    4                   | LCURL . RCURL

    IF           shift, and go to state 9
    FOR          shift, and go to state 10
    WHILE        shift, and go to state 11
    INT          shift, and go to state 12
    CHAR         shift, and go to state 13
    FLOAT        shift, and go to state 14
    RETURN       shift, and go to state 15
    PRINTLN      shift, and go to state 16
    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    LCURL        shift, and go to state 7
    RCURL        shift, and go to state 22
    SEMICOLON    shift, and go to state 23
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    compound_statement    go to state 26
    var_declaration       go to state 27
    type_specifier        go to state 28
    statements            go to state 29
    statement             go to state 30
    expression_statement  go to state 31
    variable              go to state 32
    expression            go to state 33
    logic_expression      go to state 34
    rel_expression        go to state 35
    simple_expression     go to state 36
    term                  go to state 37
    unary_expression      go to state 38
    factor                go to state 39


State 8

    1 Program: INT MAIN LPAREN RPAREN compound_statement .

    $default  reduce using rule 1 (Program)


State 9

   19 statement: IF . LPAREN expression RPAREN statement
   20          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 40


State 10

   18 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 41


State 11

   21 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 42


State 12

    7 type_specifier: INT .

    $default  reduce using rule 7 (type_specifier)


State 13

    9 type_specifier: CHAR .

    $default  reduce using rule 9 (type_specifier)


State 14

    8 type_specifier: FLOAT .

    $default  reduce using rule 8 (type_specifier)


State 15

   23 statement: RETURN . expression SEMICOLON

    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    variable           go to state 32
    expression         go to state 43
    logic_expression   go to state 34
    rel_expression     go to state 35
    simple_expression  go to state 36
    term               go to state 37
    unary_expression   go to state 38
    factor             go to state 39


State 16

   22 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 44


State 17

   43 factor: CONST_INT .

    $default  reduce using rule 43 (factor)


State 18

   44 factor: CONST_FLOAT .

    $default  reduce using rule 44 (factor)


State 19

   45 factor: CONST_CHAR .

    $default  reduce using rule 45 (factor)


State 20

   38 unary_expression: ADDOP . unary_expression

    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    variable          go to state 45
    unary_expression  go to state 46
    factor            go to state 39


State 21

   42 factor: LPAREN . expression RPAREN

    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    variable           go to state 32
    expression         go to state 47
    logic_expression   go to state 34
    rel_expression     go to state 35
    simple_expression  go to state 36
    term               go to state 37
    unary_expression   go to state 38
    factor             go to state 39


State 22

    4 compound_statement: LCURL RCURL .

    $default  reduce using rule 4 (compound_statement)


State 23

   24 expression_statement: SEMICOLON .

    $default  reduce using rule 24 (expression_statement)


State 24

   39 unary_expression: NOT . unary_expression

    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    variable          go to state 45
    unary_expression  go to state 48
    factor            go to state 39


State 25

   26 variable: ID .
   27         | ID . LTHIRD expression RTHIRD

    LTHIRD  shift, and go to state 49

    $default  reduce using rule 26 (variable)


State 26

   17 statement: compound_statement .

    $default  reduce using rule 17 (statement)


State 27

    2 compound_statement: LCURL var_declaration . statements RCURL
    6 var_declaration: var_declaration . type_specifier declaration_list SEMICOLON

    IF           shift, and go to state 9
    FOR          shift, and go to state 10
    WHILE        shift, and go to state 11
    INT          shift, and go to state 12
    CHAR         shift, and go to state 13
    FLOAT        shift, and go to state 14
    RETURN       shift, and go to state 15
    PRINTLN      shift, and go to state 16
    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    LCURL        shift, and go to state 7
    SEMICOLON    shift, and go to state 23
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    compound_statement    go to state 26
    type_specifier        go to state 50
    statements            go to state 51
    statement             go to state 30
    expression_statement  go to state 31
    variable              go to state 32
    expression            go to state 33
    logic_expression      go to state 34
    rel_expression        go to state 35
    simple_expression     go to state 36
    term                  go to state 37
    unary_expression      go to state 38
    factor                go to state 39


State 28

    5 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 52

    declaration_list  go to state 53


State 29

    3 compound_statement: LCURL statements . RCURL
   15 statements: statements . statement

    IF           shift, and go to state 9
    FOR          shift, and go to state 10
    WHILE        shift, and go to state 11
    RETURN       shift, and go to state 15
    PRINTLN      shift, and go to state 16
    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    LCURL        shift, and go to state 7
    RCURL        shift, and go to state 54
    SEMICOLON    shift, and go to state 23
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    compound_statement    go to state 26
    statement             go to state 55
    expression_statement  go to state 31
    variable              go to state 32
    expression            go to state 33
    logic_expression      go to state 34
    rel_expression        go to state 35
    simple_expression     go to state 36
    term                  go to state 37
    unary_expression      go to state 38
    factor                go to state 39


State 30

   14 statements: statement .

    $default  reduce using rule 14 (statements)


State 31

   16 statement: expression_statement .

    $default  reduce using rule 16 (statement)


State 32

   29 expression: variable . ASSIGNOP logic_expression
   41 factor: variable .
   46       | variable . INCOP
   47       | variable . DECOP

    INCOP     shift, and go to state 56
    DECOP     shift, and go to state 57
    ASSIGNOP  shift, and go to state 58

    $default  reduce using rule 41 (factor)


State 33

   25 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 59


State 34

   28 expression: logic_expression .

    $default  reduce using rule 28 (expression)


State 35

   30 logic_expression: rel_expression .
   31                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 60

    $default  reduce using rule 30 (logic_expression)


State 36

   32 rel_expression: simple_expression .
   33               | simple_expression . RELOP simple_expression
   35 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 61
    RELOP  shift, and go to state 62

    $default  reduce using rule 32 (rel_expression)


State 37

   34 simple_expression: term .
   37 term: term . MULOP unary_expression

    MULOP  shift, and go to state 63

    $default  reduce using rule 34 (simple_expression)


State 38

   36 term: unary_expression .

    $default  reduce using rule 36 (term)


State 39

   40 unary_expression: factor .

    $default  reduce using rule 40 (unary_expression)


State 40

   19 statement: IF LPAREN . expression RPAREN statement
   20          | IF LPAREN . expression RPAREN statement ELSE statement

    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    variable           go to state 32
    expression         go to state 64
    logic_expression   go to state 34
    rel_expression     go to state 35
    simple_expression  go to state 36
    term               go to state 37
    unary_expression   go to state 38
    factor             go to state 39


State 41

   18 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    SEMICOLON    shift, and go to state 23
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    expression_statement  go to state 65
    variable              go to state 32
    expression            go to state 33
    logic_expression      go to state 34
    rel_expression        go to state 35
    simple_expression     go to state 36
    term                  go to state 37
    unary_expression      go to state 38
    factor                go to state 39


State 42

   21 statement: WHILE LPAREN . expression RPAREN statement

    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    variable           go to state 32
    expression         go to state 66
    logic_expression   go to state 34
    rel_expression     go to state 35
    simple_expression  go to state 36
    term               go to state 37
    unary_expression   go to state 38
    factor             go to state 39


State 43

   23 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 44

   22 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 68


State 45

   41 factor: variable .
   46       | variable . INCOP
   47       | variable . DECOP

    INCOP  shift, and go to state 56
    DECOP  shift, and go to state 57

    $default  reduce using rule 41 (factor)


State 46

   38 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 38 (unary_expression)


State 47

   42 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 69


State 48

   39 unary_expression: NOT unary_expression .

    $default  reduce using rule 39 (unary_expression)


State 49

   27 variable: ID LTHIRD . expression RTHIRD

    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    variable           go to state 32
    expression         go to state 70
    logic_expression   go to state 34
    rel_expression     go to state 35
    simple_expression  go to state 36
    term               go to state 37
    unary_expression   go to state 38
    factor             go to state 39


State 50

    6 var_declaration: var_declaration type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 52

    declaration_list  go to state 71


State 51

    2 compound_statement: LCURL var_declaration statements . RCURL
   15 statements: statements . statement

    IF           shift, and go to state 9
    FOR          shift, and go to state 10
    WHILE        shift, and go to state 11
    RETURN       shift, and go to state 15
    PRINTLN      shift, and go to state 16
    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    LCURL        shift, and go to state 7
    RCURL        shift, and go to state 72
    SEMICOLON    shift, and go to state 23
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    compound_statement    go to state 26
    statement             go to state 55
    expression_statement  go to state 31
    variable              go to state 32
    expression            go to state 33
    logic_expression      go to state 34
    rel_expression        go to state 35
    simple_expression     go to state 36
    term                  go to state 37
    unary_expression      go to state 38
    factor                go to state 39


State 52

   12 declaration_list: ID .
   13                 | ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 73

    $default  reduce using rule 12 (declaration_list)


State 53

    5 var_declaration: type_specifier declaration_list . SEMICOLON
   10 declaration_list: declaration_list . COMMA ID
   11                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 74
    SEMICOLON  shift, and go to state 75


State 54

    3 compound_statement: LCURL statements RCURL .

    $default  reduce using rule 3 (compound_statement)


State 55

   15 statements: statements statement .

    $default  reduce using rule 15 (statements)


State 56

   46 factor: variable INCOP .

    $default  reduce using rule 46 (factor)


State 57

   47 factor: variable DECOP .

    $default  reduce using rule 47 (factor)


State 58

   29 expression: variable ASSIGNOP . logic_expression

    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    variable           go to state 45
    logic_expression   go to state 76
    rel_expression     go to state 35
    simple_expression  go to state 36
    term               go to state 37
    unary_expression   go to state 38
    factor             go to state 39


State 59

   25 expression_statement: expression SEMICOLON .

    $default  reduce using rule 25 (expression_statement)


State 60

   31 logic_expression: rel_expression LOGICOP . rel_expression

    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    variable           go to state 45
    rel_expression     go to state 77
    simple_expression  go to state 36
    term               go to state 37
    unary_expression   go to state 38
    factor             go to state 39


State 61

   35 simple_expression: simple_expression ADDOP . term

    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    variable          go to state 45
    term              go to state 78
    unary_expression  go to state 38
    factor            go to state 39


State 62

   33 rel_expression: simple_expression RELOP . simple_expression

    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    variable           go to state 45
    simple_expression  go to state 79
    term               go to state 37
    unary_expression   go to state 38
    factor             go to state 39


State 63

   37 term: term MULOP . unary_expression

    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    variable          go to state 45
    unary_expression  go to state 80
    factor            go to state 39


State 64

   19 statement: IF LPAREN expression . RPAREN statement
   20          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 81


State 65

   18 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    SEMICOLON    shift, and go to state 23
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    expression_statement  go to state 82
    variable              go to state 32
    expression            go to state 33
    logic_expression      go to state 34
    rel_expression        go to state 35
    simple_expression     go to state 36
    term                  go to state 37
    unary_expression      go to state 38
    factor                go to state 39


State 66

   21 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 83


State 67

   23 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 23 (statement)


State 68

   22 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 84


State 69

   42 factor: LPAREN expression RPAREN .

    $default  reduce using rule 42 (factor)


State 70

   27 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 85


State 71

    6 var_declaration: var_declaration type_specifier declaration_list . SEMICOLON
   10 declaration_list: declaration_list . COMMA ID
   11                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 74
    SEMICOLON  shift, and go to state 86


State 72

    2 compound_statement: LCURL var_declaration statements RCURL .

    $default  reduce using rule 2 (compound_statement)


State 73

   13 declaration_list: ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 87


State 74

   10 declaration_list: declaration_list COMMA . ID
   11                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 88


State 75

    5 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 5 (var_declaration)


State 76

   29 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 29 (expression)


State 77

   31 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 31 (logic_expression)


State 78

   35 simple_expression: simple_expression ADDOP term .
   37 term: term . MULOP unary_expression

    MULOP  shift, and go to state 63

    $default  reduce using rule 35 (simple_expression)


State 79

   33 rel_expression: simple_expression RELOP simple_expression .
   35 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 61

    $default  reduce using rule 33 (rel_expression)


State 80

   37 term: term MULOP unary_expression .

    $default  reduce using rule 37 (term)


State 81

   19 statement: IF LPAREN expression RPAREN . statement
   20          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 9
    FOR          shift, and go to state 10
    WHILE        shift, and go to state 11
    RETURN       shift, and go to state 15
    PRINTLN      shift, and go to state 16
    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    LCURL        shift, and go to state 7
    SEMICOLON    shift, and go to state 23
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    compound_statement    go to state 26
    statement             go to state 89
    expression_statement  go to state 31
    variable              go to state 32
    expression            go to state 33
    logic_expression      go to state 34
    rel_expression        go to state 35
    simple_expression     go to state 36
    term                  go to state 37
    unary_expression      go to state 38
    factor                go to state 39


State 82

   18 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    variable           go to state 32
    expression         go to state 90
    logic_expression   go to state 34
    rel_expression     go to state 35
    simple_expression  go to state 36
    term               go to state 37
    unary_expression   go to state 38
    factor             go to state 39


State 83

   21 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 9
    FOR          shift, and go to state 10
    WHILE        shift, and go to state 11
    RETURN       shift, and go to state 15
    PRINTLN      shift, and go to state 16
    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    LCURL        shift, and go to state 7
    SEMICOLON    shift, and go to state 23
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    compound_statement    go to state 26
    statement             go to state 91
    expression_statement  go to state 31
    variable              go to state 32
    expression            go to state 33
    logic_expression      go to state 34
    rel_expression        go to state 35
    simple_expression     go to state 36
    term                  go to state 37
    unary_expression      go to state 38
    factor                go to state 39


State 84

   22 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 92


State 85

   27 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 27 (variable)


State 86

    6 var_declaration: var_declaration type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 6 (var_declaration)


State 87

   13 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 93


State 88

   10 declaration_list: declaration_list COMMA ID .
   11                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 94

    $default  reduce using rule 10 (declaration_list)


State 89

   19 statement: IF LPAREN expression RPAREN statement .
   20          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 95

    $default  reduce using rule 19 (statement)


State 90

   18 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 96


State 91

   21 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 21 (statement)


State 92

   22 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 22 (statement)


State 93

   13 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 13 (declaration_list)


State 94

   11 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 97


State 95

   20 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 9
    FOR          shift, and go to state 10
    WHILE        shift, and go to state 11
    RETURN       shift, and go to state 15
    PRINTLN      shift, and go to state 16
    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    LCURL        shift, and go to state 7
    SEMICOLON    shift, and go to state 23
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    compound_statement    go to state 26
    statement             go to state 98
    expression_statement  go to state 31
    variable              go to state 32
    expression            go to state 33
    logic_expression      go to state 34
    rel_expression        go to state 35
    simple_expression     go to state 36
    term                  go to state 37
    unary_expression      go to state 38
    factor                go to state 39


State 96

   18 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 9
    FOR          shift, and go to state 10
    WHILE        shift, and go to state 11
    RETURN       shift, and go to state 15
    PRINTLN      shift, and go to state 16
    CONST_INT    shift, and go to state 17
    CONST_FLOAT  shift, and go to state 18
    CONST_CHAR   shift, and go to state 19
    ADDOP        shift, and go to state 20
    LPAREN       shift, and go to state 21
    LCURL        shift, and go to state 7
    SEMICOLON    shift, and go to state 23
    NOT          shift, and go to state 24
    ID           shift, and go to state 25

    compound_statement    go to state 26
    statement             go to state 99
    expression_statement  go to state 31
    variable              go to state 32
    expression            go to state 33
    logic_expression      go to state 34
    rel_expression        go to state 35
    simple_expression     go to state 36
    term                  go to state 37
    unary_expression      go to state 38
    factor                go to state 39


State 97

   11 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 100


State 98

   20 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 20 (statement)


State 99

   18 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 18 (statement)


State 100

   11 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 11 (declaration_list)
