Matched Rule>>>type_specifier : INT



declaration_list : ID



i



6 --> <i , ID, -99999>




Matched Rule>>>declaration_list : declaration_list COMMA ID



j



6 --> <i , ID, -99999>
7 --> <j , ID, -99999>




Matched Rule>>>declaration_list : declaration_list COMMA ID



k



6 --> <i , ID, -99999>
7 --> <j , ID, -99999>
8 --> <k , ID, -99999>




Matched Rule>>>var_declaration : type_specifier declaration_list SEMICOLON



variable : ID 



factor : CONST_INT 



0



unary_expression : factor



term :unary_expression



simple_expression : term 



rel_expression : simple_expression



logic_expression : rel_expression



expression : variable ASSIGNOP logic_expression



HELLO SHOOTING STAR!!



6 --> <i , ID, 0>
7 --> <j , ID, -99999>
8 --> <k , ID, -99999>




expression_statement : expression SEMICOLON



variable : ID 



factor : variable 



unary_expression : factor



term :unary_expression



simple_expression : term 



factor : CONST_INT 



10



unary_expression : factor



term :unary_expression



simple_expression : term 



rel_expression : simple_expression RELOP simple_expression



logic_expression : rel_expression



expression : logic_expression



expression_statement : expression SEMICOLON



variable : ID 



variable : ID 



factor : variable 



unary_expression : factor



term :unary_expression



simple_expression : term 



factor : CONST_INT 



2



unary_expression : factor



term :unary_expression



simple_expression : simple_expression ADDOP term



HELLO SHOOTING STAR!!



rel_expression : simple_expression



logic_expression : rel_expression



expression : variable ASSIGNOP logic_expression



HELLO SHOOTING STAR!!



6 --> <i , ID, 3>
7 --> <j , ID, -99999>
8 --> <k , ID, -99999>




Matched Rule>>>compound_statement : LCURL RCURL



statement  : compound_statement



statement  : FOR LPAREN expression_statement expression_statement expression RPAREN statement



statements : statement



variable : ID 



factor : CONST_INT 



8



unary_expression : factor



term :unary_expression



simple_expression : term 



rel_expression : simple_expression



logic_expression : rel_expression



expression : variable ASSIGNOP logic_expression



HELLO SHOOTING STAR!!



6 --> <i , ID, 3>
7 --> <j , ID, 8>
8 --> <k , ID, -99999>




expression_statement : expression SEMICOLON



variable : ID 



factor : variable 



unary_expression : factor



term :unary_expression



simple_expression : term 



factor : CONST_INT 



20



unary_expression : factor



term :unary_expression



simple_expression : term 



rel_expression : simple_expression RELOP simple_expression



logic_expression : rel_expression



expression : logic_expression



expression_statement : expression SEMICOLON



variable : ID 



variable : ID 



factor : variable 



unary_expression : factor



term :unary_expression



simple_expression : term 



factor : CONST_INT 



5



unary_expression : factor



term :unary_expression



simple_expression : simple_expression ADDOP term



HELLO SHOOTING STAR!!



rel_expression : simple_expression



logic_expression : rel_expression



expression : variable ASSIGNOP logic_expression



HELLO SHOOTING STAR!!



6 --> <i , ID, 3>
7 --> <j , ID, 6>
8 --> <k , ID, -99999>




Matched Rule>>>compound_statement : LCURL RCURL



statement  : compound_statement



statement  : FOR LPAREN expression_statement expression_statement expression RPAREN statement



statements : statements statement



variable : ID 



factor : CONST_INT 



10



unary_expression : factor



term :unary_expression



simple_expression : term 



rel_expression : simple_expression



logic_expression : rel_expression



expression : variable ASSIGNOP logic_expression



HELLO SHOOTING STAR!!



6 --> <i , ID, 3>
7 --> <j , ID, 6>
8 --> <k , ID, 10>




expression_statement : expression SEMICOLON



variable : ID 



factor : variable 



unary_expression : factor



term :unary_expression



simple_expression : term 



factor : CONST_INT 



30



unary_expression : factor



term :unary_expression



simple_expression : term 



rel_expression : simple_expression RELOP simple_expression



logic_expression : rel_expression



expression : logic_expression



expression_statement : expression SEMICOLON



variable : ID 



variable : ID 



factor : variable 



unary_expression : factor



term :unary_expression



simple_expression : term 



factor : CONST_INT 



6



unary_expression : factor



term :unary_expression



simple_expression : simple_expression ADDOP term



HELLO SHOOTING STAR!!



rel_expression : simple_expression



logic_expression : rel_expression



expression : variable ASSIGNOP logic_expression



HELLO SHOOTING STAR!!



6 --> <i , ID, 3>
7 --> <j , ID, 6>
8 --> <k , ID, 7>




Matched Rule>>>compound_statement : LCURL RCURL



statement  : compound_statement



statement  : FOR LPAREN expression_statement expression_statement expression RPAREN statement



statements : statements statement



Matched Rule>>>compound_statement : LCURL var_declaration statements RCURL



Matched Rule>>>Program : INT MAIN LPAREN RPAREN compound_statement



PRINTING SYMBOL TABLE
6 --> <i , ID, 3>
7 --> <j , ID, 6>
8 --> <k , ID, 7>






PRINTING VARIABLE LIST
i ID INT
j ID INT
k ID INT


TOTAL LINES: 013
