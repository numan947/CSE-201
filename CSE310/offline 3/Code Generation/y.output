Terminals unused in grammar

   DO
   DOUBLE
   CHAR
   VOID
   BREAK
   SWITCH
   CASE
   DEFAULT
   CONTINUE
   DECOP


Grammar

    0 $accept: Program $end

    1 Program: INT MAIN LPAREN RPAREN compound_statement

    2 compound_statement: LCURL var_declaration statements RCURL
    3                   | LCURL statements RCURL
    4                   | LCURL RCURL

    5 var_declaration: var_declaration type_specifier declaration_list SEMICOLON
    6                | type_specifier declaration_list SEMICOLON

    7 type_specifier: INT
    8               | FLOAT

    9 declaration_list: declaration_list COMMA ID
   10                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   11                 | ID
   12                 | ID LTHIRD CONST_INT RTHIRD

   13 statements: statement
   14           | statements statement

   15 statement: expression_statement
   16          | compound_statement
   17          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   18          | IF LPAREN expression RPAREN statement
   19          | IF LPAREN expression RPAREN statement ELSE statement
   20          | WHILE LPAREN expression RPAREN statement
   21          | PRINTLN LPAREN ID RPAREN SEMICOLON
   22          | RETURN expression SEMICOLON

   23 expression_statement: SEMICOLON
   24                     | expression SEMICOLON

   25 variable: ID
   26         | ID LTHIRD expression RTHIRD

   27 expression: logic_expression
   28           | variable ASSIGNOP logic_expression

   29 logic_expression: rel_expression
   30                 | rel_expression LOGICOP rel_expression

   31 rel_expression: simple_expression
   32               | simple_expression RELOP simple_expression

   33 simple_expression: term
   34                  | simple_expression ADDOP term

   35 term: unary_expression
   36     | term MULOP unary_expression

   37 unary_expression: ADDOP unary_expression
   38                 | NOT unary_expression
   39                 | factor

   40 factor: variable
   41       | LPAREN expression RPAREN
   42       | CONST_INT
   43       | CONST_FLOAT
   44       | variable INCOP


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 18 19
ELSE (259) 19
FOR (260) 17
WHILE (261) 20
DO (262)
INT (263) 1 7
FLOAT (264) 8
DOUBLE (265)
CHAR (266)
RETURN (267) 22
VOID (268)
BREAK (269)
SWITCH (270)
CASE (271)
DEFAULT (272)
CONTINUE (273)
ADDOP (274) 34 37
MULOP (275) 36
ASSIGNOP (276) 28
RELOP (277) 32
LOGICOP (278) 30
SEMICOLON (279) 5 6 21 22 23 24
COMMA (280) 9 10
LPAREN (281) 1 17 18 19 20 21 41
RPAREN (282) 1 17 18 19 20 21 41
LCURL (283) 2 3 4
RCURL (284) 2 3 4
LTHIRD (285) 10 12 26
RTHIRD (286) 10 12 26
INCOP (287) 44
DECOP (288)
CONST_INT (289) 10 12 42
CONST_FLOAT (290) 43
ID (291) 9 10 11 12 21 25 26
NOT (292) 38
PRINTLN (293) 21
MAIN (294) 1
THEN (295)


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
Program (42)
    on left: 1, on right: 0
compound_statement (43)
    on left: 2 3 4, on right: 1 16
var_declaration (44)
    on left: 5 6, on right: 2 5
type_specifier (45)
    on left: 7 8, on right: 5 6
declaration_list (46)
    on left: 9 10 11 12, on right: 5 6 9 10
statements (47)
    on left: 13 14, on right: 2 3 14
statement (48)
    on left: 15 16 17 18 19 20 21 22, on right: 13 14 17 18 19 20
expression_statement (49)
    on left: 23 24, on right: 15 17
variable (50)
    on left: 25 26, on right: 28 40 44
expression (51)
    on left: 27 28, on right: 17 18 19 20 22 24 26 41
logic_expression (52)
    on left: 29 30, on right: 27 28
rel_expression (53)
    on left: 31 32, on right: 29 30
simple_expression (54)
    on left: 33 34, on right: 31 32 34
term (55)
    on left: 35 36, on right: 33 34 36
unary_expression (56)
    on left: 37 38 39, on right: 35 36 37 38
factor (57)
    on left: 40 41 42 43 44, on right: 39


State 0

    0 $accept: . Program $end

    INT  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: INT . MAIN LPAREN RPAREN compound_statement

    MAIN  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: INT MAIN . LPAREN RPAREN compound_statement

    LPAREN  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: INT MAIN LPAREN . RPAREN compound_statement

    RPAREN  shift, and go to state 6


State 6

    1 Program: INT MAIN LPAREN RPAREN . compound_statement

    LCURL  shift, and go to state 7

    compound_statement  go to state 8


State 7

    2 compound_statement: LCURL . var_declaration statements RCURL
    3                   | LCURL . statements RCURL
    4                   | LCURL . RCURL

    IF           shift, and go to state 9
    FOR          shift, and go to state 10
    WHILE        shift, and go to state 11
    INT          shift, and go to state 12
    FLOAT        shift, and go to state 13
    RETURN       shift, and go to state 14
    ADDOP        shift, and go to state 15
    SEMICOLON    shift, and go to state 16
    LPAREN       shift, and go to state 17
    LCURL        shift, and go to state 7
    RCURL        shift, and go to state 18
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22
    PRINTLN      shift, and go to state 23

    compound_statement    go to state 24
    var_declaration       go to state 25
    type_specifier        go to state 26
    statements            go to state 27
    statement             go to state 28
    expression_statement  go to state 29
    variable              go to state 30
    expression            go to state 31
    logic_expression      go to state 32
    rel_expression        go to state 33
    simple_expression     go to state 34
    term                  go to state 35
    unary_expression      go to state 36
    factor                go to state 37


State 8

    1 Program: INT MAIN LPAREN RPAREN compound_statement .

    $default  reduce using rule 1 (Program)


State 9

   18 statement: IF . LPAREN expression RPAREN statement
   19          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 38


State 10

   17 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 39


State 11

   20 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 40


State 12

    7 type_specifier: INT .

    $default  reduce using rule 7 (type_specifier)


State 13

    8 type_specifier: FLOAT .

    $default  reduce using rule 8 (type_specifier)


State 14

   22 statement: RETURN . expression SEMICOLON

    ADDOP        shift, and go to state 15
    LPAREN       shift, and go to state 17
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22

    variable           go to state 30
    expression         go to state 41
    logic_expression   go to state 32
    rel_expression     go to state 33
    simple_expression  go to state 34
    term               go to state 35
    unary_expression   go to state 36
    factor             go to state 37


State 15

   37 unary_expression: ADDOP . unary_expression

    ADDOP        shift, and go to state 15
    LPAREN       shift, and go to state 17
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22

    variable          go to state 42
    unary_expression  go to state 43
    factor            go to state 37


State 16

   23 expression_statement: SEMICOLON .

    $default  reduce using rule 23 (expression_statement)


State 17

   41 factor: LPAREN . expression RPAREN

    ADDOP        shift, and go to state 15
    LPAREN       shift, and go to state 17
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22

    variable           go to state 30
    expression         go to state 44
    logic_expression   go to state 32
    rel_expression     go to state 33
    simple_expression  go to state 34
    term               go to state 35
    unary_expression   go to state 36
    factor             go to state 37


State 18

    4 compound_statement: LCURL RCURL .

    $default  reduce using rule 4 (compound_statement)


State 19

   42 factor: CONST_INT .

    $default  reduce using rule 42 (factor)


State 20

   43 factor: CONST_FLOAT .

    $default  reduce using rule 43 (factor)


State 21

   25 variable: ID .
   26         | ID . LTHIRD expression RTHIRD

    LTHIRD  shift, and go to state 45

    $default  reduce using rule 25 (variable)


State 22

   38 unary_expression: NOT . unary_expression

    ADDOP        shift, and go to state 15
    LPAREN       shift, and go to state 17
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22

    variable          go to state 42
    unary_expression  go to state 46
    factor            go to state 37


State 23

   21 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 47


State 24

   16 statement: compound_statement .

    $default  reduce using rule 16 (statement)


State 25

    2 compound_statement: LCURL var_declaration . statements RCURL
    5 var_declaration: var_declaration . type_specifier declaration_list SEMICOLON

    IF           shift, and go to state 9
    FOR          shift, and go to state 10
    WHILE        shift, and go to state 11
    INT          shift, and go to state 12
    FLOAT        shift, and go to state 13
    RETURN       shift, and go to state 14
    ADDOP        shift, and go to state 15
    SEMICOLON    shift, and go to state 16
    LPAREN       shift, and go to state 17
    LCURL        shift, and go to state 7
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22
    PRINTLN      shift, and go to state 23

    compound_statement    go to state 24
    type_specifier        go to state 48
    statements            go to state 49
    statement             go to state 28
    expression_statement  go to state 29
    variable              go to state 30
    expression            go to state 31
    logic_expression      go to state 32
    rel_expression        go to state 33
    simple_expression     go to state 34
    term                  go to state 35
    unary_expression      go to state 36
    factor                go to state 37


State 26

    6 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 50

    declaration_list  go to state 51


State 27

    3 compound_statement: LCURL statements . RCURL
   14 statements: statements . statement

    IF           shift, and go to state 9
    FOR          shift, and go to state 10
    WHILE        shift, and go to state 11
    RETURN       shift, and go to state 14
    ADDOP        shift, and go to state 15
    SEMICOLON    shift, and go to state 16
    LPAREN       shift, and go to state 17
    LCURL        shift, and go to state 7
    RCURL        shift, and go to state 52
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22
    PRINTLN      shift, and go to state 23

    compound_statement    go to state 24
    statement             go to state 53
    expression_statement  go to state 29
    variable              go to state 30
    expression            go to state 31
    logic_expression      go to state 32
    rel_expression        go to state 33
    simple_expression     go to state 34
    term                  go to state 35
    unary_expression      go to state 36
    factor                go to state 37


State 28

   13 statements: statement .

    $default  reduce using rule 13 (statements)


State 29

   15 statement: expression_statement .

    $default  reduce using rule 15 (statement)


State 30

   28 expression: variable . ASSIGNOP logic_expression
   40 factor: variable .
   44       | variable . INCOP

    ASSIGNOP  shift, and go to state 54
    INCOP     shift, and go to state 55

    $default  reduce using rule 40 (factor)


State 31

   24 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 56


State 32

   27 expression: logic_expression .

    $default  reduce using rule 27 (expression)


State 33

   29 logic_expression: rel_expression .
   30                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 57

    $default  reduce using rule 29 (logic_expression)


State 34

   31 rel_expression: simple_expression .
   32               | simple_expression . RELOP simple_expression
   34 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 58
    RELOP  shift, and go to state 59

    $default  reduce using rule 31 (rel_expression)


State 35

   33 simple_expression: term .
   36 term: term . MULOP unary_expression

    MULOP  shift, and go to state 60

    $default  reduce using rule 33 (simple_expression)


State 36

   35 term: unary_expression .

    $default  reduce using rule 35 (term)


State 37

   39 unary_expression: factor .

    $default  reduce using rule 39 (unary_expression)


State 38

   18 statement: IF LPAREN . expression RPAREN statement
   19          | IF LPAREN . expression RPAREN statement ELSE statement

    ADDOP        shift, and go to state 15
    LPAREN       shift, and go to state 17
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22

    variable           go to state 30
    expression         go to state 61
    logic_expression   go to state 32
    rel_expression     go to state 33
    simple_expression  go to state 34
    term               go to state 35
    unary_expression   go to state 36
    factor             go to state 37


State 39

   17 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 15
    SEMICOLON    shift, and go to state 16
    LPAREN       shift, and go to state 17
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22

    expression_statement  go to state 62
    variable              go to state 30
    expression            go to state 31
    logic_expression      go to state 32
    rel_expression        go to state 33
    simple_expression     go to state 34
    term                  go to state 35
    unary_expression      go to state 36
    factor                go to state 37


State 40

   20 statement: WHILE LPAREN . expression RPAREN statement

    ADDOP        shift, and go to state 15
    LPAREN       shift, and go to state 17
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22

    variable           go to state 30
    expression         go to state 63
    logic_expression   go to state 32
    rel_expression     go to state 33
    simple_expression  go to state 34
    term               go to state 35
    unary_expression   go to state 36
    factor             go to state 37


State 41

   22 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 64


State 42

   40 factor: variable .
   44       | variable . INCOP

    INCOP  shift, and go to state 55

    $default  reduce using rule 40 (factor)


State 43

   37 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 37 (unary_expression)


State 44

   41 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 65


State 45

   26 variable: ID LTHIRD . expression RTHIRD

    ADDOP        shift, and go to state 15
    LPAREN       shift, and go to state 17
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22

    variable           go to state 30
    expression         go to state 66
    logic_expression   go to state 32
    rel_expression     go to state 33
    simple_expression  go to state 34
    term               go to state 35
    unary_expression   go to state 36
    factor             go to state 37


State 46

   38 unary_expression: NOT unary_expression .

    $default  reduce using rule 38 (unary_expression)


State 47

   21 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 67


State 48

    5 var_declaration: var_declaration type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 50

    declaration_list  go to state 68


State 49

    2 compound_statement: LCURL var_declaration statements . RCURL
   14 statements: statements . statement

    IF           shift, and go to state 9
    FOR          shift, and go to state 10
    WHILE        shift, and go to state 11
    RETURN       shift, and go to state 14
    ADDOP        shift, and go to state 15
    SEMICOLON    shift, and go to state 16
    LPAREN       shift, and go to state 17
    LCURL        shift, and go to state 7
    RCURL        shift, and go to state 69
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22
    PRINTLN      shift, and go to state 23

    compound_statement    go to state 24
    statement             go to state 53
    expression_statement  go to state 29
    variable              go to state 30
    expression            go to state 31
    logic_expression      go to state 32
    rel_expression        go to state 33
    simple_expression     go to state 34
    term                  go to state 35
    unary_expression      go to state 36
    factor                go to state 37


State 50

   11 declaration_list: ID .
   12                 | ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 70

    $default  reduce using rule 11 (declaration_list)


State 51

    6 var_declaration: type_specifier declaration_list . SEMICOLON
    9 declaration_list: declaration_list . COMMA ID
   10                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    SEMICOLON  shift, and go to state 71
    COMMA      shift, and go to state 72


State 52

    3 compound_statement: LCURL statements RCURL .

    $default  reduce using rule 3 (compound_statement)


State 53

   14 statements: statements statement .

    $default  reduce using rule 14 (statements)


State 54

   28 expression: variable ASSIGNOP . logic_expression

    ADDOP        shift, and go to state 15
    LPAREN       shift, and go to state 17
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22

    variable           go to state 42
    logic_expression   go to state 73
    rel_expression     go to state 33
    simple_expression  go to state 34
    term               go to state 35
    unary_expression   go to state 36
    factor             go to state 37


State 55

   44 factor: variable INCOP .

    $default  reduce using rule 44 (factor)


State 56

   24 expression_statement: expression SEMICOLON .

    $default  reduce using rule 24 (expression_statement)


State 57

   30 logic_expression: rel_expression LOGICOP . rel_expression

    ADDOP        shift, and go to state 15
    LPAREN       shift, and go to state 17
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22

    variable           go to state 42
    rel_expression     go to state 74
    simple_expression  go to state 34
    term               go to state 35
    unary_expression   go to state 36
    factor             go to state 37


State 58

   34 simple_expression: simple_expression ADDOP . term

    ADDOP        shift, and go to state 15
    LPAREN       shift, and go to state 17
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22

    variable          go to state 42
    term              go to state 75
    unary_expression  go to state 36
    factor            go to state 37


State 59

   32 rel_expression: simple_expression RELOP . simple_expression

    ADDOP        shift, and go to state 15
    LPAREN       shift, and go to state 17
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22

    variable           go to state 42
    simple_expression  go to state 76
    term               go to state 35
    unary_expression   go to state 36
    factor             go to state 37


State 60

   36 term: term MULOP . unary_expression

    ADDOP        shift, and go to state 15
    LPAREN       shift, and go to state 17
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22

    variable          go to state 42
    unary_expression  go to state 77
    factor            go to state 37


State 61

   18 statement: IF LPAREN expression . RPAREN statement
   19          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 78


State 62

   17 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 15
    SEMICOLON    shift, and go to state 16
    LPAREN       shift, and go to state 17
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22

    expression_statement  go to state 79
    variable              go to state 30
    expression            go to state 31
    logic_expression      go to state 32
    rel_expression        go to state 33
    simple_expression     go to state 34
    term                  go to state 35
    unary_expression      go to state 36
    factor                go to state 37


State 63

   20 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 80


State 64

   22 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 22 (statement)


State 65

   41 factor: LPAREN expression RPAREN .

    $default  reduce using rule 41 (factor)


State 66

   26 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 81


State 67

   21 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 82


State 68

    5 var_declaration: var_declaration type_specifier declaration_list . SEMICOLON
    9 declaration_list: declaration_list . COMMA ID
   10                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    SEMICOLON  shift, and go to state 83
    COMMA      shift, and go to state 72


State 69

    2 compound_statement: LCURL var_declaration statements RCURL .

    $default  reduce using rule 2 (compound_statement)


State 70

   12 declaration_list: ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 84


State 71

    6 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 6 (var_declaration)


State 72

    9 declaration_list: declaration_list COMMA . ID
   10                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 85


State 73

   28 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 28 (expression)


State 74

   30 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 30 (logic_expression)


State 75

   34 simple_expression: simple_expression ADDOP term .
   36 term: term . MULOP unary_expression

    MULOP  shift, and go to state 60

    $default  reduce using rule 34 (simple_expression)


State 76

   32 rel_expression: simple_expression RELOP simple_expression .
   34 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 58

    $default  reduce using rule 32 (rel_expression)


State 77

   36 term: term MULOP unary_expression .

    $default  reduce using rule 36 (term)


State 78

   18 statement: IF LPAREN expression RPAREN . statement
   19          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 9
    FOR          shift, and go to state 10
    WHILE        shift, and go to state 11
    RETURN       shift, and go to state 14
    ADDOP        shift, and go to state 15
    SEMICOLON    shift, and go to state 16
    LPAREN       shift, and go to state 17
    LCURL        shift, and go to state 7
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22
    PRINTLN      shift, and go to state 23

    compound_statement    go to state 24
    statement             go to state 86
    expression_statement  go to state 29
    variable              go to state 30
    expression            go to state 31
    logic_expression      go to state 32
    rel_expression        go to state 33
    simple_expression     go to state 34
    term                  go to state 35
    unary_expression      go to state 36
    factor                go to state 37


State 79

   17 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    ADDOP        shift, and go to state 15
    LPAREN       shift, and go to state 17
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22

    variable           go to state 30
    expression         go to state 87
    logic_expression   go to state 32
    rel_expression     go to state 33
    simple_expression  go to state 34
    term               go to state 35
    unary_expression   go to state 36
    factor             go to state 37


State 80

   20 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 9
    FOR          shift, and go to state 10
    WHILE        shift, and go to state 11
    RETURN       shift, and go to state 14
    ADDOP        shift, and go to state 15
    SEMICOLON    shift, and go to state 16
    LPAREN       shift, and go to state 17
    LCURL        shift, and go to state 7
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22
    PRINTLN      shift, and go to state 23

    compound_statement    go to state 24
    statement             go to state 88
    expression_statement  go to state 29
    variable              go to state 30
    expression            go to state 31
    logic_expression      go to state 32
    rel_expression        go to state 33
    simple_expression     go to state 34
    term                  go to state 35
    unary_expression      go to state 36
    factor                go to state 37


State 81

   26 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 26 (variable)


State 82

   21 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 89


State 83

    5 var_declaration: var_declaration type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 5 (var_declaration)


State 84

   12 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 90


State 85

    9 declaration_list: declaration_list COMMA ID .
   10                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 91

    $default  reduce using rule 9 (declaration_list)


State 86

   18 statement: IF LPAREN expression RPAREN statement .
   19          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 92

    $default  reduce using rule 18 (statement)


State 87

   17 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 93


State 88

   20 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 20 (statement)


State 89

   21 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 21 (statement)


State 90

   12 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 12 (declaration_list)


State 91

   10 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 94


State 92

   19 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 9
    FOR          shift, and go to state 10
    WHILE        shift, and go to state 11
    RETURN       shift, and go to state 14
    ADDOP        shift, and go to state 15
    SEMICOLON    shift, and go to state 16
    LPAREN       shift, and go to state 17
    LCURL        shift, and go to state 7
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22
    PRINTLN      shift, and go to state 23

    compound_statement    go to state 24
    statement             go to state 95
    expression_statement  go to state 29
    variable              go to state 30
    expression            go to state 31
    logic_expression      go to state 32
    rel_expression        go to state 33
    simple_expression     go to state 34
    term                  go to state 35
    unary_expression      go to state 36
    factor                go to state 37


State 93

   17 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 9
    FOR          shift, and go to state 10
    WHILE        shift, and go to state 11
    RETURN       shift, and go to state 14
    ADDOP        shift, and go to state 15
    SEMICOLON    shift, and go to state 16
    LPAREN       shift, and go to state 17
    LCURL        shift, and go to state 7
    CONST_INT    shift, and go to state 19
    CONST_FLOAT  shift, and go to state 20
    ID           shift, and go to state 21
    NOT          shift, and go to state 22
    PRINTLN      shift, and go to state 23

    compound_statement    go to state 24
    statement             go to state 96
    expression_statement  go to state 29
    variable              go to state 30
    expression            go to state 31
    logic_expression      go to state 32
    rel_expression        go to state 33
    simple_expression     go to state 34
    term                  go to state 35
    unary_expression      go to state 36
    factor                go to state 37


State 94

   10 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 97


State 95

   19 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 19 (statement)


State 96

   17 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 17 (statement)


State 97

   10 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 10 (declaration_list)
